<script asp-src="/OrchardCore.ContentTree/Scripts/content-tree.js" asp-name="content-tree" at="Foot" depends-on="admin, vuejs, sortable, vuedraggable"></script>
<style asp-src="/OrchardCore.ContentTree/Styles/content-tree.min.css" debug-src="/OrchardCore.ContentTree/Styles/content-tree.css"></style>
<style asp-src="/OrchardCore.Media/Styles/media.min.css" debug-src="/OrchardCore.Media/Styles/media.css"></style>
<script asp-src="https://vuejs.org/js/vue.min.js" debug-src="https://vuejs.org/js/vue.js" asp-name="vuejs" at="Foot"></script>
@* todo see if sortable draggable are still required*@
<script asp-src="https://cdn.jsdelivr.net/sortable/1.4.2/Sortable.min.js" debug-src="https://cdn.jsdelivr.net/sortable/1.4.2/Sortable.js" asp-name="sortable" at="Foot"></script>
<script asp-src="https://cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.14.1/vuedraggable.min.js" debug-src="https://cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.14.1/vuedraggable.js" asp-name="vuedraggable" depends-on="vuejs, sortable" at="Foot"></script>


<div class="d-flex flex-column" style="border:  8px orange; height:100%;">
    <h1 class="ocf" style="border:  2px yellow;">@RenderTitleSegments(T["Content Browser"])</h1>

    <div class="d-flex flex-row flex-grow-1" id="content-tree" style="border: 8px red; height:100%;">
        <div id="content-tree-left-bar">
            <ol id="providers-tree" v-cloak>
                <li v-for="p in providers">
                    <tree-node :model="p" ref="rootFolder" :selected-in-media-app="null" :level="1">
                    </tree-node>
                </li>
            </ol>

        </div>
        <div id="content-tree-content-area"
             class="flex-grow-1"
             style="border:  4px green;">
            <p>content area</p>
            <p>{{ message }} ..</p>
        </div>
    </div>
</div>




@* Endpoints *@
<input type="hidden" id="GetTreeNodeProvidersUrl" value="@Url.Action("GetTreeNodeProviders", "Admin", new { area = "OrchardCore.ContentTree" })" />
<input type="hidden" id="GetChildrenUrl" value="@Url.Action("GetChildren", "Admin", new { area = "OrchardCore.ContentTree" })" />
<input type="hidden" id="GetContentItemsUrl" value="@Url.Action("GetContentItems", "Admin", new { area = "OrchardCore.ContentTree" })" />
@*<input type="hidden" id="deleteFolderUrl" value="@Url.Action("DeleteFolder", "Admin", new { area = "OrchardCore.Media" })" />
    <input type="hidden" id="createFolderUrl" value="@Url.Action("CreateFolder", "Admin", new { area = "OrchardCore.Media" })" />
    <input type="hidden" id="getMediaItemsUrl" value="@Url.Action("GetMediaItems", "Admin", new { area = "OrchardCore.Media" })" />
    <input type="hidden" id="deleteMediaUrl" value="@Url.Action("DeleteMedia", "Admin", new { area = "OrchardCore.Media" })" />
    <input type="hidden" id="renameMediaUrl" value="@Url.Action("MoveMedia", "Admin", new { area = "OrchardCore.Media" })" />
    <input type="hidden" id="deleteMediaListUrl" value="@Url.Action("DeleteMediaList", "Admin", new { area = "OrchardCore.Media" })" />
    <input type="hidden" id="moveMediaListUrl" value="@Url.Action("MoveMediaList", "Admin", new { area = "OrchardCore.Media" })" />
    <input type="hidden" id="uploadFiles" value="@Url.Action("Upload", "Admin", new { area = "OrchardCore.Media" })" />*@
